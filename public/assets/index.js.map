{"version":3,"sources":["index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","s","o","g","r","a","m","q","push","l","Date","createElement","getElementsByTagName","async","src","parentNode","insertBefore","window","document","ga","update","state","alpha","x","Math","random","canvas","width","y","height","scale","velocity","abs","draw","context","beginPath","arc","PI","fillStyle","fill","animate","clearRect","bubbles","requestAnimationFrame","container","getElementsByClassName","getElementById","getContext","addEventListener","offsetWidth","dispatchEvent","Event","addBubbles","setInterval","clearInterval"],"mappings":"AAAA,YAEA,IAAIA,UAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,GAAIC,GAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,GAAIG,GAASF,UAAUD,EAAI,KAAK,GAAII,KAAOD,GAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,MAAOL,KAFvP,SAAUC,EAAEQ,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,GAAGb,EAAA,sBAA2BW,EAAEX,EAAEW,GAAGX,EAAEW,IAAI,YAChEX,EAAEW,GAAGG,EAAEd,EAAEW,GAAGG,OAAOC,KAAKd,YAAYD,EAAEW,GAAGK,EAAE,EAAE,GAAIC,MAAOL,EAAEJ,EAAEU,cAAcT,GAC3EI,EAAEL,EAAEW,qBAAqBV,GAAG,GAAGG,EAAEQ,MAAM,EAAER,EAAES,IAAIX,EAAEG,EAAES,WAAWC,aAAaX,EAAEC,IAC1EW,OAAOC,SAAS,SAAS,0CAA0C,MACtEC,GAAG,SAAU,gBAAiB,QAC9BA,GAAG,OAAQ,YAEX,WAWI,QAASC,GAAOC,GACZ,OAAKA,GAASA,EAAMC,OAAS,GAErBC,EAAGC,KAAKC,SAAWC,EAAOC,MAC1BC,EAAGF,EAAOG,OAAS,GACnBP,MAAO,GAAsB,GAAhBE,KAAKC,SAClBK,MAAO,IAAuB,GAAhBN,KAAKC,SACnBM,SAAUP,KAAKQ,IAAIR,KAAKC,UAAY,IAI5CpC,YACOgC,GACHE,EAAGF,EAAME,EACTK,EAAGP,EAAMO,GAAKP,EAAMU,SACpBA,SAAUV,EAAMU,UAAY,KAC5BT,MAAOD,EAAMC,OAAS,OAI9B,QAASW,GAAKZ,GACVa,EAAQC,YACRD,EAAQE,IAAIf,EAAME,EAAGF,EAAMO,EAAiB,GAAdP,EAAMS,MAAY,EAAG,EAAIN,KAAKa,IAAI,GAChEH,EAAQI,UAAY,uBAAwBjB,EAAMC,MAAO,IACzDY,EAAQK,OAGZ,QAASC,KACLN,EAAQO,UAAU,EAAG,EAAGf,EAAOC,MAAOD,EAAOG,OAE7C,KAAI,GAAIpC,KAAKiD,GACTT,EAAKS,EAAQjD,GAAK2B,EAAOsB,EAAQjD,IAGrCkD,uBAAsBH,GA5C1B,GAAMI,GAAY1B,SAAS2B,uBAAuB,aAAa,GACzDnB,EAASR,SAAS4B,eAAe,WACjCZ,EAAUR,EAAOqB,WAAW,MAC5BL,IAENzB,QAAO+B,iBAAiB,SAAU,WAC9BtB,EAAOC,MAAQiB,EAAUK,cAE7BhC,OAAOiC,cAAc,GAAIC,OAAM,UA8C/B,IAAMC,GAAaC,YAAY,WAC3B,GAAIX,EAAQ/C,OAAU+B,EAAOC,MAAQ,GACjC,MAAO2B,eAAcF,EAGzB,KAAK,GAAI7B,GAAI,EAAO,EAAJA,EAAOA,IACnBmB,EAAQlC,KAAKY,MAElB,IAEHoB","file":"index.js","sourcesContent":["(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\nga('create', 'UA-25609352-3', 'auto');\nga('send', 'pageview');\n\n(() => {\n    const container = document.getElementsByClassName('container')[0];\n    const canvas = document.getElementById('bubbles');\n    const context = canvas.getContext('2d');\n    const bubbles = [];\n\n    window.addEventListener('resize', () => {\n        canvas.width = container.offsetWidth;\n    });\n    window.dispatchEvent(new Event('resize'));\n\n    function update(state) {\n        if (!state || state.alpha <= 0) {\n            return {\n                x: Math.random() * canvas.width,\n                y: canvas.height + 20,\n                alpha: 0.5 + Math.random() * 0.3,\n                scale: 0.05 + Math.random() * 0.3,\n                velocity: Math.abs(Math.random()) + 0.4,\n            };\n        }\n\n        return {\n            ...state,\n            x: state.x,\n            y: state.y -= state.velocity,\n            velocity: state.velocity -= 0.005,\n            alpha: state.alpha -= 0.005,\n        };\n    }\n\n    function draw(state) {\n        context.beginPath();\n        context.arc(state.x, state.y, state.scale * 10, 0, 2 * Math.PI, false);\n        context.fillStyle = 'rgba(100, 100, 100, '+ state.alpha +')';\n        context.fill();\n    }\n\n    function animate() {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        for(let i in bubbles) {\n            draw(bubbles[i] = update(bubbles[i]));\n        }\n\n        requestAnimationFrame(animate);\n    }\n\n    // const debug = document.getElementsByClassName('debug')[0];\n    // setInterval(() => {\n    //     debug.innerText = \"bubbles: \" + bubbles.length;\n    // }, 100);\n\n    // if we add all the bubbles at once then they appear to come in waves\n    // so add them slowly\n    const addBubbles = setInterval(() => {\n        if (bubbles.length > (canvas.width / 10)) {\n            return clearInterval(addBubbles);\n        }\n\n        for (let x = 0; x < 5; x++) {\n            bubbles.push(update());\n        }\n    }, 200);\n\n    animate();\n})();\n"],"sourceRoot":"/source/"}
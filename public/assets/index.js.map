{"version":3,"sources":["index.js"],"names":["animate","ctx","clearRect","canvas","width","height","i","bubbles","update","draw","requestAnimationFrame","random_color","parseInt","Math","random","Bubble","init","x","y","alpha","scale","velocity","color","Array","fill","join","state","this","Object","assign","beginPath","arc","PI","fillStyle","document","getElementById","window","innerWidth","innerHeight","getContext","push","addEventListener"],"mappings":"AAAA,cAAA,WAmBI,QAASA,KACLC,EAAIC,UAAU,EAAG,EAAGC,EAAOC,MAAOD,EAAOE,OAEzC,KAAI,GAAIC,KAAKC,GACTA,EAAQD,GAAGE,SACXD,EAAQD,GAAGG,MAGfC,uBAAsBV,GAG1B,QAASW,KACL,MAAO,IAAMC,SAAyB,GAAhBC,KAAKC,UAI/B,QAASC,KAGL,QAASC,KACL,OACIC,EAAGJ,KAAKC,SAAWX,EAAOC,MAC1Bc,EAAGf,EAAOE,OAAyB,IAAhBQ,KAAKC,SACxBK,MAAO,GAAsB,GAAhBN,KAAKC,SAClBM,MAAO,GAAsB,GAAhBP,KAAKC,SAClBO,SAAUR,KAAKC,SACfQ,MAAOC,MAAM,GAAGC,KAAKb,KAAgBc,KAAK,MATlD,GAAIC,GAAQV,GAaZW,MAAKnB,OAAS,WAENkB,EADAA,EAAMP,OAAS,EACPH,IAIAY,OAAOC,OAAOH,GAClBT,EAAGS,EAAMT,EACTC,EAAGQ,EAAMR,GAAKQ,EAAML,SAAWK,EAAMN,MACrCC,SAAUK,EAAML,UAAY,KAC5BF,MAAOO,EAAMP,OAAS,QAKlCQ,KAAKlB,KAAO,WACRR,EAAI6B,YACJ7B,EAAI8B,IAAIL,EAAMT,EAAGS,EAAMR,EAAiB,GAAdQ,EAAMN,MAAY,EAAG,EAAIP,KAAKmB,IAAI,GAC5D/B,EAAIgC,UAAY,QAASP,EAAMJ,MAAO,IAAKI,EAAMP,MAAO,IACxDlB,EAAIuB,QAnEZ,GAAMrB,GAAS+B,SAASC,eAAe,UACvChC,GAAOC,MAAQgC,OAAOC,WACtBlC,EAAOE,OAAS+B,OAAOE,WAKvB,KAAI,GAHErC,GAAME,EAAOoC,WAAW,MAExBhC,KACEU,EAAI,EAAO,GAAJA,EAAQA,IACrBV,EAAQiC,KAAK,GAAIzB,GAGnBqB,QAAOK,iBAAiB,SAAU,WAC9BtC,EAAOC,MAAQgC,OAAOC,WACtBlC,EAAOE,OAAS+B,OAAOE,cAG3BtC","file":"index.js","sourcesContent":["(() => {\n    const canvas = document.getElementById('bubbles');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const ctx = canvas.getContext('2d');\n\n    const bubbles = [];\n    for(var x = 0; x < 50; x++) {\n      bubbles.push(new Bubble());\n    }\n\n    window.addEventListener('resize', () => {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n    });\n\n    animate();\n\n    function animate() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        for(var i in bubbles) {\n            bubbles[i].update();\n            bubbles[i].draw();\n        }\n\n        requestAnimationFrame(animate);\n    }\n\n    function random_color() {\n        return '2' + parseInt(Math.random() * 55)\n    }\n\n    // Canvas manipulation\n    function Bubble() {\n        let state = init();\n\n        function init() {\n            return {\n                x: Math.random() * canvas.width,\n                y: canvas.height + Math.random() * 100,\n                alpha: 0.5 + Math.random() * 0.3,\n                scale: 0.1 + Math.random() * 0.3,\n                velocity: Math.random(),\n                color: Array(3).fill(random_color()).join(','),\n            }\n        }\n\n        this.update = () => {\n            if (state.alpha <= 0) {\n                state = init();\n            }\n\n            else {\n                state = Object.assign(state, {\n                    x: state.x,\n                    y: state.y -= state.velocity - state.scale,\n                    velocity: state.velocity += 0.0005,\n                    alpha: state.alpha -= 0.005,\n                });\n            }\n        }\n\n        this.draw = () => {\n            ctx.beginPath();\n            ctx.arc(state.x, state.y, state.scale * 10, 0, 2 * Math.PI, false);\n            ctx.fillStyle = 'rgba('+ state.color +','+ state.alpha +')';\n            ctx.fill();\n        };\n    }\n})();\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA,CAAC,YAAM;AACH,QAAM,SAAS,SAAS,cAAT,CAAwB,SAAxB,CAAf;AACA,WAAO,KAAP,GAAe,OAAO,UAAtB;AACA,WAAO,MAAP,GAAgB,OAAO,WAAvB;;AAEA,QAAM,MAAM,OAAO,UAAP,CAAkB,IAAlB,CAAZ;;AAEA,WAAO,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACpC,eAAO,KAAP,GAAe,OAAO,UAAtB;AACA,eAAO,MAAP,GAAgB,OAAO,WAAvB;AACH,KAHD;;AAKA,QAAM,UAAU,EAAhB;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,EAApB,EAAwB,GAAxB,EAA6B;AAC3B,gBAAQ,IAAR,CAAa,IAAI,MAAJ,EAAb;AACD;;AAED,aAAS,OAAT,GAAmB;AACf,YAAI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,OAAO,KAA3B,EAAkC,OAAO,MAAzC;;AAEA,aAAI,IAAI,CAAR,IAAa,OAAb,EAAsB;AAClB,oBAAQ,CAAR,EAAW,MAAX;AACA,oBAAQ,CAAR,EAAW,IAAX;AACH;;AAED,8BAAsB,OAAtB;AACH;AACD;;AAEA,aAAS,YAAT,GAAwB;AACpB,eAAO,MAAM,SAAS,KAAK,MAAL,KAAgB,EAAzB,CAAb;AACH;;;AAGD,aAAS,MAAT,GAAkB;AACd,YAAI,QAAQ,MAAZ;;AAEA,iBAAS,IAAT,GAAgB;AACZ,mBAAO;AACH,mBAAG,KAAK,MAAL,KAAgB,OAAO,KADvB;AAEH,mBAAG,OAAO,MAAP,GAAgB,EAFhB;AAGH,uBAAO,MAAM,KAAK,MAAL,KAAgB,GAH1B;AAIH,uBAAO,MAAM,KAAK,MAAL,KAAgB,GAJ1B;AAKH,0BAAU,KAAK,GAAL,CAAS,KAAK,MAAL,EAAT,CALP;AAMH,uBAAO,MAAM,CAAN,EAAS,IAAT,CAAc,cAAd,EAA8B,IAA9B,CAAmC,GAAnC;AANJ,aAAP;AAQH;;AAED,aAAK,MAAL,GAAc,YAAM;AAChB,gBAAI,MAAM,KAAN,IAAe,CAAnB,EAAsB;AAClB,wBAAQ,MAAR;AACH,aAFD,MAIK;AACD,wBAAQ,OAAO,MAAP,CAAc,KAAd,EAAqB;AACzB,uBAAG,MAAM,CADgB;AAEzB,uBAAG,MAAM,CAAN,IAAW,MAAM,QAFK;AAGzB,8BAAU,MAAM,QAAN,IAAkB,KAHH;AAIzB,2BAAO,MAAM,KAAN,IAAe;AAJG,iBAArB,CAAR;AAMH;AACJ,SAbD;;AAeA,aAAK,IAAL,GAAY,YAAM;AACd,gBAAI,SAAJ;AACA,gBAAI,GAAJ,CAAQ,MAAM,CAAd,EAAiB,MAAM,CAAvB,EAA0B,MAAM,KAAN,GAAc,EAAxC,EAA4C,CAA5C,EAA+C,IAAI,KAAK,EAAxD,EAA4D,KAA5D;AACA,gBAAI,SAAJ,GAAgB,UAAS,MAAM,KAAf,GAAsB,GAAtB,GAA2B,MAAM,KAAjC,GAAwC,GAAxD;AACA,gBAAI,IAAJ;AACH,SALD;AAMH;AACJ,CAtED","file":"index.js","sourcesContent":["(() => {\n    const canvas = document.getElementById('bubbles');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const ctx = canvas.getContext('2d');\n\n    window.addEventListener('resize', () => {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n    });\n\n    const bubbles = [];\n    for (let x = 0; x < 50; x++) {\n      bubbles.push(new Bubble());\n    }\n\n    function animate() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        for(var i in bubbles) {\n            bubbles[i].update();\n            bubbles[i].draw();\n        }\n\n        requestAnimationFrame(animate);\n    }\n    animate();\n\n    function random_color() {\n        return '2' + parseInt(Math.random() * 55)\n    }\n\n    // Canvas manipulation\n    function Bubble() {\n        let state = init();\n\n        function init() {\n            return {\n                x: Math.random() * canvas.width,\n                y: canvas.height + 20,\n                alpha: 0.5 + Math.random() * 0.3,\n                scale: 0.1 + Math.random() * 0.3,\n                velocity: Math.abs(Math.random()),\n                color: Array(3).fill(random_color()).join(','),\n            }\n        }\n\n        this.update = () => {\n            if (state.alpha <= 0) {\n                state = init();\n            }\n\n            else {\n                state = Object.assign(state, {\n                    x: state.x,\n                    y: state.y -= state.velocity,\n                    velocity: state.velocity -= 0.005,\n                    alpha: state.alpha -= 0.005,\n                });\n            }\n        }\n\n        this.draw = () => {\n            ctx.beginPath();\n            ctx.arc(state.x, state.y, state.scale * 10, 0, 2 * Math.PI, false);\n            ctx.fillStyle = 'rgba('+ state.color +','+ state.alpha +')';\n            ctx.fill();\n        };\n    }\n})();\n"],"sourceRoot":"/source/"}